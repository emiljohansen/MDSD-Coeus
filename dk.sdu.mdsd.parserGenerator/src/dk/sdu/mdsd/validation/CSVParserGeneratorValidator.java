/*
 * generated by Xtext 2.21.0
 */
package dk.sdu.mdsd.validation;

import org.eclipse.xtext.validation.Check;

import dk.sdu.mdsd.cSVParserGenerator.Add;
import dk.sdu.mdsd.cSVParserGenerator.CSVParserGeneratorPackage;
import dk.sdu.mdsd.cSVParserGenerator.ColDecl;
import dk.sdu.mdsd.cSVParserGenerator.Modification;
import dk.sdu.mdsd.cSVParserGenerator.Parser;
import dk.sdu.mdsd.cSVParserGenerator.Type;
import dk.sdu.mdsd.cSVParserGenerator.ValueMod;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class CSVParserGeneratorValidator extends AbstractCSVParserGeneratorValidator {
	
//	public static final String INVALID_NAME = "invalidName";
//
//	@Check
//	public void checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.getName().charAt(0))) {
//			warning("Name should start with a capital",
//					CSVParserGeneratorPackage.Literals.GREETING__NAME,
//					INVALID_NAME);
//		}
//	}
	
	@Check
	public void checkModificationType(ValueMod mod) {
		
	}
	
	@Check
	public void checkAddColumnName(Add a, Parser p) {
		for (ColDecl col : p.getColumns()) {
			if (col.getName() == a.getName()) {
				warning("Columns names should be unique", CSVParserGeneratorPackage.Literals.ADD__NAME);
			}
		}
	}
	
}
