/*
 * generated by Xtext 2.21.0
 */
grammar InternalCSVParserGenerator;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mdsd.services.CSVParserGeneratorGrammarAccess;

}
@parser::members {
	private CSVParserGeneratorGrammarAccess grammarAccess;

	public void setGrammarAccess(CSVParserGeneratorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleParser
entryRuleParser
:
{ before(grammarAccess.getParserRule()); }
	 ruleParser
{ after(grammarAccess.getParserRule()); } 
	 EOF 
;

// Rule Parser
ruleParser 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParserAccess().getGroup()); }
		(rule__Parser__Group__0)
		{ after(grammarAccess.getParserAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFileDecl
entryRuleFileDecl
:
{ before(grammarAccess.getFileDeclRule()); }
	 ruleFileDecl
{ after(grammarAccess.getFileDeclRule()); } 
	 EOF 
;

// Rule FileDecl
ruleFileDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileDeclAccess().getGroup()); }
		(rule__FileDecl__Group__0)
		{ after(grammarAccess.getFileDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColDecl
entryRuleColDecl
:
{ before(grammarAccess.getColDeclRule()); }
	 ruleColDecl
{ after(grammarAccess.getColDeclRule()); } 
	 EOF 
;

// Rule ColDecl
ruleColDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColDeclAccess().getGroup()); }
		(rule__ColDecl__Group__0)
		{ after(grammarAccess.getColDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModification
entryRuleModification
:
{ before(grammarAccess.getModificationRule()); }
	 ruleModification
{ after(grammarAccess.getModificationRule()); } 
	 EOF 
;

// Rule Modification
ruleModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModificationAccess().getAlternatives()); }
		(rule__Modification__Alternatives)
		{ after(grammarAccess.getModificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueMod
entryRuleValueMod
:
{ before(grammarAccess.getValueModRule()); }
	 ruleValueMod
{ after(grammarAccess.getValueModRule()); } 
	 EOF 
;

// Rule ValueMod
ruleValueMod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueModAccess().getGroup()); }
		(rule__ValueMod__Group__0)
		{ after(grammarAccess.getValueModAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogExp
entryRuleLogExp
:
{ before(grammarAccess.getLogExpRule()); }
	 ruleLogExp
{ after(grammarAccess.getLogExpRule()); } 
	 EOF 
;

// Rule LogExp
ruleLogExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogExpAccess().getGroup()); }
		(rule__LogExp__Group__0)
		{ after(grammarAccess.getLogExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParens
entryRuleParens
:
{ before(grammarAccess.getParensRule()); }
	 ruleParens
{ after(grammarAccess.getParensRule()); } 
	 EOF 
;

// Rule Parens
ruleParens 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParensAccess().getGroup()); }
		(rule__Parens__Group__0)
		{ after(grammarAccess.getParensAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternal
entryRuleExternal
:
{ before(grammarAccess.getExternalRule()); }
	 ruleExternal
{ after(grammarAccess.getExternalRule()); } 
	 EOF 
;

// Rule External
ruleExternal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalAccess().getGroup()); }
		(rule__External__Group__0)
		{ after(grammarAccess.getExternalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatFunc
entryRuleStatFunc
:
{ before(grammarAccess.getStatFuncRule()); }
	 ruleStatFunc
{ after(grammarAccess.getStatFuncRule()); } 
	 EOF 
;

// Rule StatFunc
ruleStatFunc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatFuncAccess().getAlternatives()); }
		(rule__StatFunc__Alternatives)
		{ after(grammarAccess.getStatFuncAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnAction
entryRuleColumnAction
:
{ before(grammarAccess.getColumnActionRule()); }
	 ruleColumnAction
{ after(grammarAccess.getColumnActionRule()); } 
	 EOF 
;

// Rule ColumnAction
ruleColumnAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnActionAccess().getAlternatives()); }
		(rule__ColumnAction__Alternatives)
		{ after(grammarAccess.getColumnActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnVar
entryRuleColumnVar
:
{ before(grammarAccess.getColumnVarRule()); }
	 ruleColumnVar
{ after(grammarAccess.getColumnVarRule()); } 
	 EOF 
;

// Rule ColumnVar
ruleColumnVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnVarAccess().getNameAssignment()); }
		(rule__ColumnVar__NameAssignment)
		{ after(grammarAccess.getColumnVarAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getValueModParserRuleCall_0()); }
		ruleValueMod
		{ after(grammarAccess.getModificationAccess().getValueModParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getExternalParserRuleCall_1()); }
		ruleExternal
		{ after(grammarAccess.getModificationAccess().getExternalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getStatFuncParserRuleCall_2()); }
		ruleStatFunc
		{ after(grammarAccess.getModificationAccess().getStatFuncParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getColumnActionParserRuleCall_3()); }
		ruleColumnAction
		{ after(grammarAccess.getModificationAccess().getColumnActionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getConstraintParserRuleCall_4()); }
		ruleConstraint
		{ after(grammarAccess.getModificationAccess().getConstraintParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_1()); }
		(rule__Type__Group_1__0)
		{ after(grammarAccess.getTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_3()); }
		(rule__Type__Group_3__0)
		{ after(grammarAccess.getTypeAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogExpAccess().getGroup_1_0_0()); }
		(rule__LogExp__Group_1_0_0__0)
		{ after(grammarAccess.getLogExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogExpAccess().getGroup_1_0_1()); }
		(rule__LogExp__Group_1_0_1__0)
		{ after(grammarAccess.getLogExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_0()); }
		(rule__Comparison__Group_1_0_0__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_1()); }
		(rule__Comparison__Group_1_0_1__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_2()); }
		(rule__Comparison__Group_1_0_2__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_3()); }
		(rule__Comparison__Group_1_0_3__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_4()); }
		(rule__Comparison__Group_1_0_4__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_5()); }
		(rule__Comparison__Group_1_0_5__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatFuncAccess().getGroup_0()); }
		(rule__StatFunc__Group_0__0)
		{ after(grammarAccess.getStatFuncAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatFuncAccess().getGroup_1()); }
		(rule__StatFunc__Group_1__0)
		{ after(grammarAccess.getStatFuncAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatFuncAccess().getGroup_2()); }
		(rule__StatFunc__Group_2__0)
		{ after(grammarAccess.getStatFuncAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatFuncAccess().getGroup_3()); }
		(rule__StatFunc__Group_3__0)
		{ after(grammarAccess.getStatFuncAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatFuncAccess().getGroup_4()); }
		(rule__StatFunc__Group_4__0)
		{ after(grammarAccess.getStatFuncAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnActionAccess().getGroup_0()); }
		(rule__ColumnAction__Group_0__0)
		{ after(grammarAccess.getColumnActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnActionAccess().getGroup_1()); }
		(rule__ColumnAction__Group_1__0)
		{ after(grammarAccess.getColumnActionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getGroup_1_0_0()); }
		(rule__Sum__Group_1_0_0__0)
		{ after(grammarAccess.getSumAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSumAccess().getGroup_1_0_1()); }
		(rule__Sum__Group_1_0_1__0)
		{ after(grammarAccess.getSumAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
		(rule__Factor__Group_1_0_0__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
		(rule__Factor__Group_1_0_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
		ruleNumber
		{ after(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getParensParserRuleCall_1()); }
		ruleParens
		{ after(grammarAccess.getPrimaryAccess().getParensParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getColumnVarParserRuleCall_2()); }
		ruleColumnVar
		{ after(grammarAccess.getPrimaryAccess().getColumnVarParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parser__Group__0__Impl
	rule__Parser__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParserAccess().getFileAssignment_0()); }
	(rule__Parser__FileAssignment_0)
	{ after(grammarAccess.getParserAccess().getFileAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parser__Group__1__Impl
	rule__Parser__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParserAccess().getColumnsKeyword_1()); }
	'columns'
	{ after(grammarAccess.getParserAccess().getColumnsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parser__Group__2__Impl
	rule__Parser__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParserAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getParserAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parser__Group__3__Impl
	rule__Parser__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParserAccess().getColumnsAssignment_3()); }
		(rule__Parser__ColumnsAssignment_3)
		{ after(grammarAccess.getParserAccess().getColumnsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getParserAccess().getColumnsAssignment_3()); }
		(rule__Parser__ColumnsAssignment_3)*
		{ after(grammarAccess.getParserAccess().getColumnsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parser__Group__4__Impl
	rule__Parser__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParserAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getParserAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parser__Group__5__Impl
	rule__Parser__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParserAccess().getModsAssignment_5()); }
	(rule__Parser__ModsAssignment_5)*
	{ after(grammarAccess.getParserAccess().getModsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parser__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParserAccess().getOutAssignment_6()); }
	(rule__Parser__OutAssignment_6)?
	{ after(grammarAccess.getParserAccess().getOutAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FileDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileDecl__Group__0__Impl
	rule__FileDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileDeclAccess().getFileKeyword_0()); }
	'File'
	{ after(grammarAccess.getFileDeclAccess().getFileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileDecl__Group__1__Impl
	rule__FileDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileDeclAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFileDeclAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileDeclAccess().getNameAssignment_2()); }
	(rule__FileDecl__NameAssignment_2)
	{ after(grammarAccess.getFileDeclAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColDecl__Group__0__Impl
	rule__ColDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColDeclAccess().getNameAssignment_0()); }
	(rule__ColDecl__NameAssignment_0)
	{ after(grammarAccess.getColDeclAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColDecl__Group__1__Impl
	rule__ColDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColDeclAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getColDeclAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColDecl__Group__2__Impl
	rule__ColDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColDeclAccess().getTypeAssignment_2()); }
	(rule__ColDecl__TypeAssignment_2)
	{ after(grammarAccess.getColDeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColDeclAccess().getModsAssignment_3()); }
	(rule__ColDecl__ModsAssignment_3)*
	{ after(grammarAccess.getColDeclAccess().getModsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
	'Output'
	{ after(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOutputAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getNameAssignment_2()); }
	(rule__Output__NameAssignment_2)
	{ after(grammarAccess.getOutputAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueMod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMod__Group__0__Impl
	rule__ValueMod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueModAccess().getNameAssignment_0()); }
	(rule__ValueMod__NameAssignment_0)
	{ after(grammarAccess.getValueModAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMod__Group__1__Impl
	rule__ValueMod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueModAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getValueModAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueMod__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueModAccess().getExpAssignment_2()); }
	(rule__ValueMod__ExpAssignment_2)
	{ after(grammarAccess.getValueModAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getStrAction_0_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getStrAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getStringKeyword_0_1()); }
	'String'
	{ after(grammarAccess.getTypeAccess().getStringKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIntegerAction_1_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getIntegerAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIntegerKeyword_1_1()); }
	'Integer'
	{ after(grammarAccess.getTypeAccess().getIntegerKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getDateAction_2_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getDateAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getDateKeyword_2_1()); }
	'Date'
	{ after(grammarAccess.getTypeAccess().getDateKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__0__Impl
	rule__Type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getFloatAction_3_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getFloatAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getFloatKeyword_3_1()); }
	'Float'
	{ after(grammarAccess.getTypeAccess().getFloatKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group__0__Impl
	rule__LogExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getLogExpAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getGroup_1()); }
	(rule__LogExp__Group_1__0)*
	{ after(grammarAccess.getLogExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group_1__0__Impl
	rule__LogExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getAlternatives_1_0()); }
	(rule__LogExp__Alternatives_1_0)
	{ after(grammarAccess.getLogExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getRightAssignment_1_1()); }
	(rule__LogExp__RightAssignment_1_1)
	{ after(grammarAccess.getLogExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogExp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group_1_0_0__0__Impl
	rule__LogExp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getVerticalLineVerticalLineKeyword_1_0_0_0()); }
	'||'
	{ after(grammarAccess.getLogExpAccess().getVerticalLineVerticalLineKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getOrLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getLogExpAccess().getOrLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogExp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group_1_0_1__0__Impl
	rule__LogExp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getAmpersandAmpersandKeyword_1_0_1_0()); }
	'&&'
	{ after(grammarAccess.getLogExpAccess().getAmpersandAmpersandKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogExp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogExpAccess().getAndLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getLogExpAccess().getAndLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getSumParserRuleCall_0()); }
	ruleSum
	{ after(grammarAccess.getComparisonAccess().getSumParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_1_0()); }
	(rule__Comparison__Alternatives_1_0)
	{ after(grammarAccess.getComparisonAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
	(rule__Comparison__RightAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_0__0__Impl
	rule__Comparison__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_0_0()); }
	'<'
	{ after(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLtLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getComparisonAccess().getLtLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_1__0__Impl
	rule__Comparison__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_1_0()); }
	'>'
	{ after(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGtLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getComparisonAccess().getGtLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_2__0__Impl
	rule__Comparison__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getEqualsSignEqualsSignKeyword_1_0_2_0()); }
	'=='
	{ after(grammarAccess.getComparisonAccess().getEqualsSignEqualsSignKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getEquLeftAction_1_0_2_1()); }
	()
	{ after(grammarAccess.getComparisonAccess().getEquLeftAction_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_3__0__Impl
	rule__Comparison__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getExclamationMarkEqualsSignKeyword_1_0_3_0()); }
	'!='
	{ after(grammarAccess.getComparisonAccess().getExclamationMarkEqualsSignKeyword_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getNeqLeftAction_1_0_3_1()); }
	()
	{ after(grammarAccess.getComparisonAccess().getNeqLeftAction_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_4__0__Impl
	rule__Comparison__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getEqualsSignLessThanSignKeyword_1_0_4_0()); }
	'=<'
	{ after(grammarAccess.getComparisonAccess().getEqualsSignLessThanSignKeyword_1_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLeqLeftAction_1_0_4_1()); }
	()
	{ after(grammarAccess.getComparisonAccess().getLeqLeftAction_1_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_5__0__Impl
	rule__Comparison__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getEqualsSignGreaterThanSignKeyword_1_0_5_0()); }
	'=>'
	{ after(grammarAccess.getComparisonAccess().getEqualsSignGreaterThanSignKeyword_1_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGeqLeftAction_1_0_5_1()); }
	()
	{ after(grammarAccess.getComparisonAccess().getGeqLeftAction_1_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parens__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parens__Group__0__Impl
	rule__Parens__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParensAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParensAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parens__Group__1__Impl
	rule__Parens__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParensAccess().getExpAssignment_1()); }
	(rule__Parens__ExpAssignment_1)
	{ after(grammarAccess.getParensAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parens__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParensAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParensAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__External__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__0__Impl
	rule__External__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getExtFuncKeyword_0()); }
	'ExtFunc'
	{ after(grammarAccess.getExternalAccess().getExtFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__1__Impl
	rule__External__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getNameAssignment_1()); }
	(rule__External__NameAssignment_1)
	{ after(grammarAccess.getExternalAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__2__Impl
	rule__External__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__3__Impl
	rule__External__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getInpAssignment_3()); }
	(rule__External__InpAssignment_3)
	{ after(grammarAccess.getExternalAccess().getInpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExternalAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatFunc__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_0__0__Impl
	rule__StatFunc__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getMaxAction_0_0()); }
	()
	{ after(grammarAccess.getStatFuncAccess().getMaxAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_0__1__Impl
	rule__StatFunc__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getMaxKeyword_0_1()); }
	'Max'
	{ after(grammarAccess.getStatFuncAccess().getMaxKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_0__2__Impl
	rule__StatFunc__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_0__3__Impl
	rule__StatFunc__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getInputAssignment_0_3()); }
	(rule__StatFunc__InputAssignment_0_3)
	{ after(grammarAccess.getStatFuncAccess().getInputAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatFunc__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_1__0__Impl
	rule__StatFunc__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getMinAction_1_0()); }
	()
	{ after(grammarAccess.getStatFuncAccess().getMinAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_1__1__Impl
	rule__StatFunc__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getMinKeyword_1_1()); }
	'Min'
	{ after(grammarAccess.getStatFuncAccess().getMinKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_1__2__Impl
	rule__StatFunc__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_1__3__Impl
	rule__StatFunc__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getInputAssignment_1_3()); }
	(rule__StatFunc__InputAssignment_1_3)
	{ after(grammarAccess.getStatFuncAccess().getInputAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatFunc__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_2__0__Impl
	rule__StatFunc__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getStdAction_2_0()); }
	()
	{ after(grammarAccess.getStatFuncAccess().getStdAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_2__1__Impl
	rule__StatFunc__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getStdKeyword_2_1()); }
	'Std'
	{ after(grammarAccess.getStatFuncAccess().getStdKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_2__2__Impl
	rule__StatFunc__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_2_2()); }
	'('
	{ after(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_2__3__Impl
	rule__StatFunc__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getInputAssignment_2_3()); }
	(rule__StatFunc__InputAssignment_2_3)
	{ after(grammarAccess.getStatFuncAccess().getInputAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_2_4()); }
	')'
	{ after(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatFunc__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_3__0__Impl
	rule__StatFunc__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getSumFuncAction_3_0()); }
	()
	{ after(grammarAccess.getStatFuncAccess().getSumFuncAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_3__1__Impl
	rule__StatFunc__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getSumKeyword_3_1()); }
	'Sum'
	{ after(grammarAccess.getStatFuncAccess().getSumKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_3__2__Impl
	rule__StatFunc__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_3_2()); }
	'('
	{ after(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_3__3__Impl
	rule__StatFunc__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getInputAssignment_3_3()); }
	(rule__StatFunc__InputAssignment_3_3)
	{ after(grammarAccess.getStatFuncAccess().getInputAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_3_4()); }
	')'
	{ after(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatFunc__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_4__0__Impl
	rule__StatFunc__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getMeanAction_4_0()); }
	()
	{ after(grammarAccess.getStatFuncAccess().getMeanAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_4__1__Impl
	rule__StatFunc__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getMeanKeyword_4_1()); }
	'Mean'
	{ after(grammarAccess.getStatFuncAccess().getMeanKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_4__2__Impl
	rule__StatFunc__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_4_2()); }
	'('
	{ after(grammarAccess.getStatFuncAccess().getLeftParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_4__3__Impl
	rule__StatFunc__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getInputAssignment_4_3()); }
	(rule__StatFunc__InputAssignment_4_3)
	{ after(grammarAccess.getStatFuncAccess().getInputAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatFunc__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getStatFuncAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_0__0__Impl
	rule__ColumnAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getAddAction_0_0()); }
	()
	{ after(grammarAccess.getColumnActionAccess().getAddAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_0__1__Impl
	rule__ColumnAction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getAddColKeyword_0_1()); }
	'AddCol'
	{ after(grammarAccess.getColumnActionAccess().getAddColKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_0__2__Impl
	rule__ColumnAction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getNameAssignment_0_2()); }
	(rule__ColumnAction__NameAssignment_0_2)
	{ after(grammarAccess.getColumnActionAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_0__3__Impl
	rule__ColumnAction__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getWithKeyword_0_3()); }
	'with'
	{ after(grammarAccess.getColumnActionAccess().getWithKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getModAssignment_0_4()); }
	(rule__ColumnAction__ModAssignment_0_4)
	{ after(grammarAccess.getColumnActionAccess().getModAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_1__0__Impl
	rule__ColumnAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getRemAction_1_0()); }
	()
	{ after(grammarAccess.getColumnActionAccess().getRemAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_1__1__Impl
	rule__ColumnAction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getRemColKeyword_1_1()); }
	'RemCol'
	{ after(grammarAccess.getColumnActionAccess().getRemColKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnAction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnActionAccess().getNameAssignment_1_2()); }
	(rule__ColumnAction__NameAssignment_1_2)
	{ after(grammarAccess.getColumnActionAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getSumAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getGroup_1()); }
	(rule__Sum__Group_1__0)*
	{ after(grammarAccess.getSumAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1__0__Impl
	rule__Sum__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getAlternatives_1_0()); }
	(rule__Sum__Alternatives_1_0)
	{ after(grammarAccess.getSumAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightAssignment_1_1()); }
	(rule__Sum__RightAssignment_1_1)
	{ after(grammarAccess.getSumAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_0__0__Impl
	rule__Sum__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getPlusSignKeyword_1_0_0_0()); }
	'+'
	{ after(grammarAccess.getSumAccess().getPlusSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getPlusLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getSumAccess().getPlusLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_1__0__Impl
	rule__Sum__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getHyphenMinusKeyword_1_0_1_0()); }
	'-'
	{ after(grammarAccess.getSumAccess().getHyphenMinusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getMinusLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getSumAccess().getMinusLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)*
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
	(rule__Factor__Alternatives_1_0)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
	(rule__Factor__RightAssignment_1_1)
	{ after(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__0__Impl
	rule__Factor__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_0()); }
	'*'
	{ after(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__0__Impl
	rule__Factor__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_0()); }
	'/'
	{ after(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNumAction_0()); }
	()
	{ after(grammarAccess.getNumberAccess().getNumAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getValueAssignment_1()); }
	(rule__Number__ValueAssignment_1)
	{ after(grammarAccess.getNumberAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getSatisfiesKeyword_0()); }
	'satisfies'
	{ after(grammarAccess.getConstraintAccess().getSatisfiesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
	(rule__Constraint__NameAssignment_1)
	{ after(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_2()); }
	'constraint'
	{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getExpAssignment_3()); }
	(rule__Constraint__ExpAssignment_3)
	{ after(grammarAccess.getConstraintAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parser__FileAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParserAccess().getFileFileDeclParserRuleCall_0_0()); }
		ruleFileDecl
		{ after(grammarAccess.getParserAccess().getFileFileDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__ColumnsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParserAccess().getColumnsColDeclParserRuleCall_3_0()); }
		ruleColDecl
		{ after(grammarAccess.getParserAccess().getColumnsColDeclParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__ModsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParserAccess().getModsModificationParserRuleCall_5_0()); }
		ruleModification
		{ after(grammarAccess.getParserAccess().getModsModificationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parser__OutAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParserAccess().getOutOutputParserRuleCall_6_0()); }
		ruleOutput
		{ after(grammarAccess.getParserAccess().getOutOutputParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDecl__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileDeclAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFileDeclAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColDeclAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getColDeclAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColDeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getColDeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColDecl__ModsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColDeclAccess().getModsModificationParserRuleCall_3_0()); }
		ruleModification
		{ after(grammarAccess.getColDeclAccess().getModsModificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMod__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueModAccess().getNameColDeclCrossReference_0_0()); }
		(
			{ before(grammarAccess.getValueModAccess().getNameColDeclIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValueModAccess().getNameColDeclIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getValueModAccess().getNameColDeclCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueMod__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueModAccess().getExpLogExpParserRuleCall_2_0()); }
		ruleLogExp
		{ after(grammarAccess.getValueModAccess().getExpLogExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogExpAccess().getRightComparisonParserRuleCall_1_1_0()); }
		ruleComparison
		{ after(grammarAccess.getLogExpAccess().getRightComparisonParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightSumParserRuleCall_1_1_0()); }
		ruleSum
		{ after(grammarAccess.getComparisonAccess().getRightSumParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParensAccess().getExpLogExpParserRuleCall_1_0()); }
		ruleLogExp
		{ after(grammarAccess.getParensAccess().getExpLogExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__InpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getInpColDeclCrossReference_3_0()); }
		(
			{ before(grammarAccess.getExternalAccess().getInpColDeclIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalAccess().getInpColDeclIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getExternalAccess().getInpColDeclCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__InputAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_0_3_0()); }
		(
			{ before(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_0_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_0_3_0_1()); }
		)
		{ after(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__InputAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_1_3_0()); }
		(
			{ before(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_1_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_1_3_0_1()); }
		)
		{ after(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__InputAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_2_3_0()); }
		(
			{ before(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_2_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_2_3_0_1()); }
		)
		{ after(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__InputAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_3_3_0()); }
		(
			{ before(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_3_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_3_3_0_1()); }
		)
		{ after(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatFunc__InputAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_4_3_0()); }
		(
			{ before(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_4_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatFuncAccess().getInputColDeclIDTerminalRuleCall_4_3_0_1()); }
		)
		{ after(grammarAccess.getStatFuncAccess().getInputColDeclCrossReference_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnActionAccess().getNameIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getColumnActionAccess().getNameIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__ModAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnActionAccess().getModLogExpParserRuleCall_0_4_0()); }
		ruleLogExp
		{ after(grammarAccess.getColumnActionAccess().getModLogExpParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnAction__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnActionAccess().getNameColDeclCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getColumnActionAccess().getNameColDeclIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getColumnActionAccess().getNameColDeclIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getColumnActionAccess().getNameColDeclCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getRightFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getSumAccess().getRightFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnVar__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnVarAccess().getNameColDeclCrossReference_0()); }
		(
			{ before(grammarAccess.getColumnVarAccess().getNameColDeclIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getColumnVarAccess().getNameColDeclIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getColumnVarAccess().getNameColDeclCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getNameColDeclCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConstraintAccess().getNameColDeclIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConstraintAccess().getNameColDeclIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConstraintAccess().getNameColDeclCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getExpLogExpParserRuleCall_3_0()); }
		ruleLogExp
		{ after(grammarAccess.getConstraintAccess().getExpLogExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
