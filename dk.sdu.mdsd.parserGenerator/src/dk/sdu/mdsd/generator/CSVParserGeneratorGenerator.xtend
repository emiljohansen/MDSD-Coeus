/*
 * generated by Xtext 2.21.0
 */
package dk.sdu.mdsd.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import javax.inject.Inject

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class CSVParserGeneratorGenerator extends AbstractGenerator {
	
	@Inject extension ParserClassGenerator parserGenerator

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))

		fsa.generateFile('/parser/pom.xml', generatePom())
		parserGenerator.doGenerate(resource, fsa, context);
	}
	
	def generateProjectStructure(IFileSystemAccess2 fsa) {
		
	}
	
	def CharSequence generatePom() '''
		<?xml version="1.0" encoding="UTF-8"?>
		<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
		  <modelVersion>4.0.0</modelVersion>
		  
		  <groupId>dk.sdu.mmmi.parser</groupId>
		  <artifactId>demo</artifactId>
		  <version>0.0.1-SNAPSHOT</version>
		  <name>GeneratedParser</name>
		  <description>GeneratedParser</description>
		  
		  <properties>
		    <java.version>8</java.version>
		  </properties>
		  
		  <dependencies>
		    <dependency>
		        <groupId>org.apache.commons</groupId>
		        <artifactId>commons-csv</artifactId>
		        <version>1.8</version>
		    </dependency>
		  </dependencies>
		  <build>

		  </build>
		</project>
	'''
}
